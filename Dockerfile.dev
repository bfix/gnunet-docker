
############################################################
# Dockerfile to build ">Y< GNUnet" development image.
#
# This file is part of gnunet-docker.
# Copyright (C) 2019-present, Bernd Fix  >Y<
#
# gnunet-docker is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# gnunet-docker is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# SPDX-License-Identifier: AGPL3.0-or-later
############################################################

FROM debian:bookworm

LABEL maintainer="Bernd Fix <brf@hoi-polloi.org>"

ENV DEBIAN_FRONTEND=noninteractive

#-----------------------------------------------------------
# Install dependencies.
#-----------------------------------------------------------

RUN \
	apt update && \
	apt -y upgrade && \
	apt -y install \
		bluetooth \
		build-essential \
		git \
		iptables \
		libcurl4-gnutls-dev \
		libextractor-dev \
		libgcrypt-dev \
		libgladeui-dev \
		libglpk-dev \
		libidn11-dev \
		libjose-dev \
		libogg-dev \
		libopus-dev \
		libpq-dev \
		libpulse-dev \
		libqrencode-dev \
		libsodium-dev \
		libsqlite3-dev \
		libunistring-dev \
		libzbar-dev \
		man \
		miniupnpc \
		net-tools \
		parallel \
		python3-zbar \
		recutils \
		screen \
		sudo \
		texi2html \
		texinfo \
		uncrustify \
		valgrind \
		vim \
		yapf3 \
		&& \
	apt clean all && \
	apt -y autoremove --purge && \
	rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

#-----------------------------------------------------------
# Prepare runtime environment.
#-----------------------------------------------------------

COPY gnunet-ldconfig.conf /etc/ld.so.conf.d/gnunet.conf
COPY gnunet-start         /usr/bin/
COPY gnunet-end	          /usr/bin/
COPY build-all.sh         /usr/bin/

RUN \
	ldconfig && \
	adduser --system --home /var/lib/gnunet --uid 666 --group --disabled-password gnunet && \
	addgroup --system --gid 667 gnunetdns && \
	mkdir -p /var/lib/gnunet/.config/gnunet && \
	mkdir -p /opt/gnunet && \
	ln -s /var/lib/gnunet/.config/gnunet.conf /etc/gnunet.conf && \
	sed -i -e "s/^hosts:\([[:space:]]*\).*$/hosts:\1files gns [NOTFOUND=return] dns/" /etc/nsswitch.conf

#-----------------------------------------------------------
# Setup application user.
#-----------------------------------------------------------

RUN \
	export uid=1000 gid=1000 && \
	mkdir -p /home/user && \
	echo "user:x:${uid}:${gid}:User,,,:/home/user:/bin/bash" >> /etc/passwd && \
	echo "user:x:${uid}:" >> /etc/group && \
	echo "user ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/user && \
	chmod 0440 /etc/sudoers.d/user && \
	echo "export PATH=/opt/gnunet/bin:\$PATH" > /home/user/.bash_profile && \
	chown ${uid}:${gid} -R /home/user && \
	chown ${uid}:${gid} -R /opt && \
	gpasswd -a user gnunet && \
	echo "neednone\nneednone" | passwd user

#-----------------------------------------------------------
# Entry point
#-----------------------------------------------------------

USER user
ENV HOME=/home/user
ENV GNUNET_PREFIX=/opt/gnunet
CMD ["/bin/bash", "-l"]

# expose standard and testing ports
EXPOSE 1080 2086 10000-10999

